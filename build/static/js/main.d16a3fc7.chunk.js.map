{"version":3,"sources":["components/AccountForm.js","components/PostAdd.js","components/PostDelete.js","components/MessageSend.js","components/PostEdit.js","components/Post.js","components/Profile.js","index.js"],"names":["AccountForm","type","setToken","setUser","useState","username","setUsername","password","setPassword","title","oppTitle","oppType","handleSubmit","ev","a","preventDefault","fetch","method","headers","body","JSON","stringify","user","response","json","data","token","console","error","onSubmit","value","onChange","target","placeholder","to","PostAdd","posts","setPosts","setTitle","description","setDescription","price","setPrice","willDeliver","setWillDeliver","location","setLocation","post","id","PostDelete","handleDelete","_id","postsGet","onClick","MessageSend","messages","setMessages","message","content","PostEdit","handleEdit","Post","map","idx","isAuthor","Profile","userPosts","filter","fromUser","App","useEffect","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d16a3fc7.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nconst AccountForm = ({type, setToken, setUser}) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const title = type === 'login' ? 'Login' : 'Register';\n    const oppTitle = type === 'login' ? 'Register' : 'Login';\n    const oppType = type === 'login' ? 'register' : 'login';\n\n    const handleSubmit = async (ev) => {\n        ev.preventDefault();\n        try{const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/${type}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: {\n                    username,\n                    password\n                }\n            })\n        });\n        const {data} = await response.json();\n        const token = data?.token;\n        if(token){\n            setToken(token);\n            const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            const {data} = await response.json();\n            setUser(data);\n        };\n        setUsername('');\n        setPassword('');\n        }catch(error){console.error(error);}\n    };\n\n    return <>\n        <h2>{title}</h2>\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={username} onChange={(ev) => setUsername(ev.target.value)} placeholder=\"username\"></input>\n            <input type=\"password\" value={password} onChange={(ev) => setPassword(ev.target.value)} placeholder=\"password\"></input>\n            <button type=\"submit\">{title}</button>\n        </form>\n        <Link to={`/${oppType}`}>{oppTitle}</Link>\n    </>\n};\n\nexport default AccountForm;","import React, {useState} from 'react';\n\nconst PostAdd = ({token, posts, setPosts}) => {\n    if(!token){\n        return <></>;\n    }\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState(0);\n    const [willDeliver, setWillDeliver] = useState(false);\n    const [location, setLocation] = useState('');\n    const handleSubmit = async (ev) => {\n        ev.preventDefault();\n        try{const response = await fetch (`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                post: {\n                    title: title,\n                    description: description,\n                    price: price,\n                    willDeliver: willDeliver,\n                    location: location\n                }\n            })\n        });\n        const {data} = await response.json();\n        setPosts([data.post, ...posts]);\n        setTitle('');\n        setDescription('');\n        setPrice(0);\n        setWillDeliver(false);\n        setLocation('');}catch(error){console.error(error);}\n    };\n    return <>\n    <h2>Add New Post</h2>\n    <form onSubmit={handleSubmit} id=\"postAddDetails\">\n        <input type=\"text\" value={title} onChange={(ev) => setTitle(ev.target.value)} placeholder=\"Item\"></input>\n        <input type=\"text\" value={price} onChange={(ev) => setPrice(ev.target.value)} placeholder=\"Price\"></input>\n        <input type=\"text\" value={description} onChange={(ev) => setDescription(ev.target.value)} placeholder=\"Description\"></input>\n        {/* <input type=\"checkbox\" name=\"Will Deliver?\" value={willDeliver} onChange={() => setWillDeliver(true)}></input> */}\n        <input type=\"text\" value={location} onChange={(ev) => setLocation(ev.target.value)} placeholder=\"Location\"></input>\n        <button type=\"submit\">Post</button>\n    </form>\n</>;\n};\n\nexport default PostAdd;","import React from 'react';\n\nconst PostDelete = ({post, token, setPosts}) => {\n    try{const handleDelete = async () => {\n      const response = await fetch (`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${post._id}`, {\n      method: 'DELETE',\n      headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n    const postsGet = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const {data} = await postsGet.json();\n    setPosts(data.posts);\n    };    \n    return <button onClick={handleDelete}>Delete Post</button>;}catch(error){console.error(error);};\n  };\n\nexport default PostDelete;","import React, {useState, Fragment} from 'react';\n\nconst MessageSend = ({token, post}) => {\n    if(!token){\n        return <Fragment></Fragment>;\n    };\n    const [messages, setMessages] = useState('');\n    const handleSubmit = async (ev) => {\n        ev.preventDefault();\n        try{const response = await fetch (`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${post._id}/messages`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': \"application/json\",\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({message: {content: messages}})\n        });\n        setMessages('');}catch(error){console.error(error);};\n    };\n    return <>\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={messages} onChange={(ev) => setMessages(ev.target.value)} placeholder=\"Send a Message\"></input>\n            <button>Submit</button>\n        </form>\n    </>\n};\n\nexport default MessageSend;","import React from 'react';\n\nconst PostEdit = ({post, token, setPosts}) => {\n    \n    const handleEdit = async () => {\n        try{const response = await fetch (`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${post._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      })}catch(error){console.error(error);};\n      try{const postsGet = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n  return postsGet;}catch(error){console.error(error);};\n    const {data} = await postsGet.json();\n    setPosts(data.posts);\n    };    \n    return <button onClick={handleEdit}>Edit Post</button>;\n  };\n\nexport default PostEdit;","import React, {Fragment} from 'react';\nimport PostDelete from './PostDelete';\nimport MessageSend from './MessageSend';\nimport PostEdit from './PostEdit';\n\nconst Post = ({posts, token, setPosts}) => {\n    return <>\n    {posts ? posts.map((post, idx) => {\n        return <Fragment key={idx}>\n        <h3>{post.title}, {post.price}</h3>\n        <div>{post.description}</div>\n        {post.location ? <div>{post.location}</div> : null}\n        {post.willDeliver ? <div>Will Deliver</div> : null}\n        {post.isAuthor === true ? <PostEdit token={token} post={post} setPosts={setPosts} /> : null}\n        {post.isAuthor === true ? <PostDelete post={post} token={token} setPosts={setPosts} /> : <MessageSend token={token} post={post} />}\n        </Fragment>\n      }) : null}\n      </>\n} ;\n\nexport default Post;","import React, {Fragment} from 'react';\nimport PostDelete from './PostDelete';\n//import MessageDelete from './MessageDelete';\n\nconst Profile = ({user, token, posts, setPosts}) => {\n    const userPosts = posts.filter(post => post.isAuthor ? true : false); \n        return <div id=\"profile\">\n            <div id=\"profileMessages\">\n                <h2>Your Messages</h2>\n                {user.messages ? user.messages.map((message, idx) => {\n                    return <Fragment key={idx}>\n                    <h3>{message.post.title}</h3>\n                    <h4>{message.fromUser.username}</h4>\n                    <div>{message.content}</div>\n                    </Fragment>\n                }) : null}\n            </div>\n            <div id=\"profilePosts\">\n                <h2>Your Posts</h2>\n                {userPosts ? userPosts.map((post, idx) => {\n                    return <Fragment key={idx}>\n                    <h3>{post.title}, {post.price}</h3>\n                    <div>{post.description}</div>\n                    {post.location ? <div>{post.location}</div> : null}\n                    {post.willDeliver ? <div>Will Deliver</div> : null}\n                    {post.isAuthor === true ? <PostDelete post={post} token={token} setPosts={setPosts} /> : null}\n                    </Fragment>\n                }) : null}\n            </div>\n      </div>\n};\n\nexport default Profile;","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\nimport {\n  AccountForm,\n  PostAdd,\n  Post,\n  Profile\n} from './components';\n\nimport './style.css';\n\nconst App = () => {\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState({});\n  const [posts, setPosts] = useState([]);\n\n  useEffect(async() => {\n    try{const postsGet = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const {data} = await postsGet.json();\n    setPosts(data.posts);}catch(error){console.error(error);}\n  }, [token]);\n\n  return <>\n    <h1>\n      Stranger's Things\n    </h1>\n    {user.username && <div>Hello {user.username}!</div>}\n    {token ? <button onClick={()=>{\n      setUser({});\n      setToken('');\n    }}>Logout</button> : null}\n    <Link to=\"/login\">\n      Login\n    </Link>\n    <Link to=\"/posts\">\n      Posts\n    </Link>\n    <Link to=\"/profile\">\n      Profile\n    </Link>\n    <Route path=\"/login\">\n      <AccountForm type={'login'} setToken={setToken} setUser={setUser} />\n    </Route>\n    <Route path=\"/register\">\n      <AccountForm type={'register'} setToken={setToken} setUser={setUser} />\n    </Route>\n    <Route path=\"/posts\">\n      <PostAdd token={token} posts={posts} setPosts={setPosts} />\n      <Post token={token} posts={posts} setPosts={setPosts} />\n    </Route>\n    <Route path=\"/profile\">\n      <Profile user={user} token={token} posts={posts} setPosts={setPosts}/>\n    </Route>    \n  </>\n};\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('app'),\n);"],"sourceRoot":""}